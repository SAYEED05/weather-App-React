{"version":3,"sources":["App.js","index.js"],"names":["App","useState","query","setQuery","weather","setWeather","api","process","className","type","placeholder","value","onChange","e","target","onKeyPress","key","fetch","then","res","json","data","weatherDesc","main","iconUrl","icon","document","getElementById","innerHTML","catch","err","console","error","d","date","getDate","day","getDay","year","getFullYear","month","getMonth","wholedate","Date","id","name","sys","country","Math","floor","temp","wind","speed","humidity","pressure","ReactDOM","render","StrictMode"],"mappings":"uMA0GeA,MAxGf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,KAmCPC,EACE,0CADFA,EAECC,mCAoBP,OACE,gCACE,qBAAKC,UAAU,SAAf,SACE,uBACEC,KAAK,OACLC,YAAY,YACZC,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,EAASU,EAAEC,OAAOH,QACnCI,WAzBO,SAACF,GACA,UAAVA,EAAEG,KACJC,MAAM,GAAD,OAAIX,EAAJ,qBAAyBJ,EAAzB,kBAAwCI,EAAxC,kBACFY,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLhB,EAAWgB,GACXlB,EAAS,IACT,IAAImB,EAAcD,EAAKjB,QAAQ,GAAGmB,KAE9BC,EACF,oCAFaH,EAAKjB,QAAQ,GAAGqB,KAEoB,UACvCC,SAASC,eAAe,QAChCC,UAAJ,oBAA6BJ,EAA7B,mCAA+DF,MAEhEO,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,WAcR,oBAAhB1B,EAAQmB,KACd,sBAAKf,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAf,UAlEU,SAACyB,GACjB,IAuBMC,EAAOD,EAAEE,UACTC,EAVK,CACT,SACA,SACA,UACA,YACA,WACA,SACA,YAGeH,EAAEI,UACbC,EAAOL,EAAEM,cACTC,EA1BO,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAcmBP,EAAEQ,YAEvB,MAAM,GAAN,OAAUL,EAAV,aAAkBF,EAAlB,YAA0BM,EAA1B,YAAmCF,GAqCNI,CAAU,IAAIC,MAArC,OACA,sBAAKnC,UAAU,cAAf,UACE,qBAAKA,UAAU,aACf,qBAAKoC,GAAG,SACR,sBAAKpC,UAAU,WAAf,UACGJ,EAAQyC,KADX,MACoBzC,EAAQ0C,IAAIC,WAEhC,sBAAKvC,UAAU,OAAf,UAAuBwC,KAAKC,MAAM7C,EAAQmB,KAAK2B,MAA/C,UACA,qBAAK1C,UAAU,OAAf,SACE,+BACE,+BACE,mBAAGA,UAAU,gBACZ,KACAwC,KAAKC,MAAM7C,EAAQ+C,KAAKC,OAH3B,SAKA,+BACE,mBAAG5C,UAAU,gBAAmB,IAC/BwC,KAAKC,MAAM7C,EAAQmB,KAAK8B,UAF3B,OAIA,+BACE,mBAAG7C,UAAU,iBAAoB,IAChCwC,KAAKC,MAAM7C,EAAQmB,KAAK+B,UAF3B,oBASR,OC/FRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASC,eAAe,W","file":"static/js/main.e9a97361.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const wholedate = (d) => {\n    var months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    var days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n    const date = d.getDate();\n    const day = days[d.getDay()];\n    const year = d.getFullYear();\n    const month = months[d.getMonth()];\n\n    return `${day}, ${date} ${month} ${year}`;\n  };\n  const api = {\n    base: \"http://api.openweathermap.org/data/2.5/\",\n    key: process.env.REACT_APP_WEATHER_API_KEY,\n  };\n\n  const search = (e) => {\n    if (e.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&APPID=${api.key}&units=metric`)\n        .then((res) => res.json())\n        .then((data) => {\n          setWeather(data);\n          setQuery(\"\");\n          var weatherDesc = data.weather[0].main;\n          var iconCode = data.weather[0].icon;\n          var iconUrl =\n            \"http://openweathermap.org/img/wn/\" + iconCode + \"@4x.png\";\n          const ico = document.getElementById(\"icon\");\n          ico.innerHTML = `<img src=\"${iconUrl}\" alt=\"\" srcset=\"\"> <h3>${weatherDesc}`;\n        })\n        .catch((err) => console.error(err));\n    }\n  };\n  return (\n    <div>\n      <div className=\"search\">\n        <input\n          type=\"text\"\n          placeholder=\"search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          onKeyPress={search}\n        />\n      </div>\n      {typeof weather.main != \"undefined\" ? (\n        <div className=\"container\">\n          <div className=\"date\">{wholedate(new Date())} </div>\n          <div className=\"weather-box\">\n            <div className=\"wethmain\"></div>\n            <div id=\"icon\"></div>\n            <div className=\"location\">\n              {weather.name} , {weather.sys.country}\n            </div>\n            <div className=\"temp\">{Math.floor(weather.main.temp)}&#176;</div>\n            <div className=\"misc\">\n              <ul>\n                <li>\n                  <i className=\"fas fa-wind\"></i>\n                  {\"  \"}\n                  {Math.floor(weather.wind.speed)}m/s\n                </li>\n                <li>\n                  <i className=\"fas fa-tint\"></i>{\" \"}\n                  {Math.floor(weather.main.humidity)}%\n                </li>\n                <li>\n                  <i className=\"fas fa-water\"></i>{\" \"}\n                  {Math.floor(weather.main.pressure)}hpa\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}